---
- name: Yaml Playbook to fetch the App module version deployed on each server
  hosts: DIT                                                       # this is the server group for which we want to execute this playbook
  gather_facts: True                                               # we want to gater facts about the remote systems so we can use them
  ignore_errors: False                                             # Generally playbooks will stop executing any more steps on a host that has a task fail. Sometimes, though, you want to continue on. To do so, we use this


  roles:
    - role : node_fetch                                               # Invoking node_fetch role to be executed with below variables only if when condition is true
      AppPath: /ciohosting/cce2e/{{ EnvName }}/cce2e-383-mule/apps/   # Setting the application variable here only if when condition is true
      EnvName: dit1                                                   # Setting the environment name variable here only if when condition is true
      when: ansible_hostname    == 'machine1'            # This when condition will trigger the node_fetch role only when ip address matches. 

    - role : node_fetch                                               # Invoking node_fetch role to be executed with below variables only if when condition is true
      AppPath: /ciohosting/cce2e/{{ EnvName }}/cce2e-383-mule/apps/   # Setting the application variable here only if when condition is true
      EnvName: dit2                                                   # Setting the environment name variable here only if when condition is true
      when: ansible_hostname    == 'machine1'            # This when condition will trigger the node_fetch role only when ip address matches. 
  tasks:
     # this step make sure we execute this task on DIT system.
     # we are stroging the data in this register
   - name: Run a script with arguments
     shell: ./report_final.sh  "{{ dest_node }}" "{{ src_node }}"
     delegate_to: localhost
     register: valuable_input

   - name: update the vars for role
     shell: echo  "{{ item }} " > node_fetch/vars/main.yml
     delegate_to: localhost
     register: valuable_input
     with_items:
       - "{{ valuable_input.stdout }}"

   - name: clear the temp file from the node_fetch/vars path
     shell: rm ./node_fetch/vars/*txt  ./node_fetch/vars/*csv
     delegate_to: localhost
     run_once: true


...
